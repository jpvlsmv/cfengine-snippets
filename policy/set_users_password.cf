#!/usr/local/sbin/cf-agent -bset_users_password
# A snippet bundle that sets up a (JSON) collection of users

bundle agent set_users_password
{
	meta:
		# With this tag, placing this file in 
		# $masterfiles/services/autorun/ will enforce this policy 
		# automatically
		"tags" slist => { "autorun" } ;
	
	vars:

	  # the ${passwords_*} variable holds an array of hashes in cfengine
	  # data format.
	  "passwords_sysadmins" data => parsejson('
	  	[
			{ "user": "joe",
			  "hash": "*KRB*", 
			  "uid" : "1357",
			  "promisee": "sysadmin team"
			  "note": "This sets the hash for joe to force 
			  	   kerberos (Windows AD in our case) 
				   as the only way to log in"
			}, 
			{ "user": "bob",
			  "hash": "*LCK*",
			  "uid" : "1354",
			  "promisee": "sysadmin team"
			  "note": "Bob is no longer with the company,
			  	   so lock his account by setting an invalid
				   hash.
				   Note: we could also enforce this via another
				   user promise with policy => locked"
			} 
		]
	  ');

	  "passwords_dbas" data => parsejson(readfile("$(this.promise_dirname)/passwords_dbas.json",512));

	  # Combine the two data blobs into one if we want to use it later
	  "passwords_all" data => mergedata(passwords_sysadmins,passwords_dbas);

	methods:
		#"set passwords_sysadmins" usebundle => set_passwords("set_users_password.passwords_sysadmins");
		#"set passwords_dbas" usebundle => set_passwords("set_users_password.passwords_dbas");

		# Or we could do a single call with passwords_all:
		 "set passwords_all" usebundle => set_passwords("set_users_password.passwords_all");

	reports:
		"$(this.promise_dirname)";
}

# Pass a data object to this bundle to set the user passwords
bundle agent set_passwords( passwords )
{
	vars:
		"i" slist => getindices("${passwords}");
		
	users:
		!windows:: # Windows users are not managed here
			"${${passwords}[${i}][user]}"
				policy => "present", 
				uid => "${${passwords}[${i}][uid]}",
				password => use_hash("${${passwords}[${i}][hash]}"); 
}

body password use_hash(hash) {
	format => hash; 
	data => "$(hash)";
}
